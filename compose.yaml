services:
  backend_db:
    build:
      context: ./backend
    image: backend_db_img
    volumes:
      - ./backend:/usr/src/app/
    env_file:
      - ./backend/.env
    command: python main.py
    ports:
      - "69:80"
    networks:
      - app-network
    depends_on:
      - weaviate
  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - "8080"
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.24.5
    ports:
      - "8080:8080"
      - "50051:50051"
    restart: on-failure
    environment:
      CONTEXTIONARY_URL: contextionary:9999
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: true
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_MODULES: 'text2vec-contextionary'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-contextionary'
      CLUSTER_HOSTNAME: 'node1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/openid-configuration"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    depends_on:
      - contextionary
  contextionary:
    environment:
      OCCURRENCE_WEIGHT_LINEAR_FACTOR: 0.75
      EXTENSIONS_STORAGE_MODE: weaviate
      EXTENSIONS_STORAGE_ORIGIN: http://weaviate:8080
      NEIGHBOR_OCCURRENCE_IGNORE_PERCENTILE: 5
      ENABLE_COMPOUND_SPLITTING: false
    image: cr.weaviate.io/semitechnologies/contextionary:en0.16.0-v1.2.1
    ports:
      - "9999:9999"
    networks:
      - app-network
  univspider:
    build:
      context: ./backend
    image: univspider_img
    volumes:
      - ./backend:/usr/src/app/
    env_file:
      - ./backend/.env
    command: python main.py
    ports:
      - "420:80"
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
